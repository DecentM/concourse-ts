import * as ConcourseTs from '@decentm/concourse-ts'
import * as RegistryImage from '@decentm/concourse-ts-resource-registry-image'

type SourceGoogleCloud = {
  /**
   * Set to true to use gcloud service account file for kubernetes cluster authentication.
   */
  gcloud_cluster_auth?: boolean
  /**
   * Mandatory if `gcloud_cluster_auth` is set to true and `gcloud_workload_identity_enabled` is set to `false`. Pass gcloud service account json contents as value or a file path containing service_account json.
   */
  gcloud_service_account_key_file?: ConcourseTs.Utils.Var | string
  /**
   * Mandatory if `gcloud_cluster_auth` is set to true and `gcloud_service_account_key_file` is not set. Workload identity must be enabled on the cluster. (Default: `false`)
   */
  gcloud_workload_identity_enabled?: boolean
  /**
   * Mandatory if `gcloud_cluster_auth` is set to true. Pass gcloud project name where cluster is installed.
   */
  gcloud_project_name?: ConcourseTs.Utils.Var | string
  /**
   * Mandatory if `gcloud_cluster_auth` is set to true. Pass gcloud cluster name.
   */
  gcloud_k8s_cluster_name?: ConcourseTs.Utils.Var | string
  /**
   * Mandatory if `gcloud_cluster_auth` is set to true. Pass gcloud kubernetes cluster zone.
   */
  gcloud_k8s_zone?: ConcourseTs.Utils.Var | string
}

type SourceDigitalOcean = {
  digitalocean?: {
    /**
     * ClusterID on digitalocean to fetch kubeconfig.
     */
    cluster_id?: ConcourseTs.Utils.Var | string
    /**
     * Read Access Token to fetch kubeconfig.
     */
    access_token?: ConcourseTs.Utils.Var
  }
}

/**
 * https://github.com/Typositoire/concourse-helm3-resource
 */
export type Source = (SourceGoogleCloud | SourceDigitalOcean) & {
  /**
   * URL to Kubernetes Master API service. Do not set when using the
   * `kubeconfig_path` parameter, otherwise required.
   */
  cluster_url?: ConcourseTs.Utils.Var | string
  /**
   * Cluster CA certificate PEM. (Required if `insecure_cluster` == false)
   */
  cluster_ca?: ConcourseTs.Utils.Var
  /**
   * Cluster CA certificate PEM Base64 encoded. (Required if `insecure_cluster`
   * == false)
   */
  cluster_ca_base64?: ConcourseTs.Utils.Var
  /**
   * Skip TLS verification for cluster API. (Required if `cluster_ca` is nil)
   */
  insecure_cluster?: boolean
  /**
   * Bearer token for Kubernetes.  This, `token_path` or
   * `admin_key`/`admin_cert` are required if `cluster_url` is https.
   */
  token?: ConcourseTs.Utils.Var
  /**
   * Path to file containing the bearer token for Kubernetes.  This, 'token' or
   * `admin_key`/`admin_cert` are required if `cluster_url` is https.
   */
  token_path?: ConcourseTs.Utils.Var | string
  /**
   * Server name to use for server certificate validation. If it is not
   * provided, the hostname used to contact the server is used.
   */
  tls_server_name?: string
  /**
   * Base64 encoded PEM. Required if `cluster_url` is https and no `token` or
   * 'token_path' is provided.
   */
  admin_key?: ConcourseTs.Utils.Var
  /**
   * Base64 encoded PEM. Required if `cluster_url` is https and no `token` or
   * 'token_path' is provided.
   */
  admin_cert?: ConcourseTs.Utils.Var
  /**
   * Name of the release (not a file, a string). (Default: autogenerated by
   * helm)
   */
  release?: string
  /**
   * Kubernetes namespace the chart will be installed into. (Default: default)
   */
  namespace?: string
  /**
   * Limits the maximum number of revisions. (Default: 0 = no limit)
   */
  helm_history_max?: number
  /**
   * Array of Helm repositories to initialize, each repository is defined as an
   * object with properties `name`, `url` (required) username and password
   * (optional).
   */
  repos?: Array<{
    name: string
    url: string
    username?: ConcourseTs.Utils.Var | string
    password?: ConcourseTs.Utils.Var
  }>
  /**
   * Array of Helm plugins to install, each defined as an object with properties
   * `url` (required), `version` (optional).
   */
  plugins?: Array<{
    url: string
    version?: string
  }>
  /**
   * `"false"` (must be "string" not boolean) value will disable using a default
   * Helm stable repo. Any other value will be used to Override default Helm
   * stable repo URL <https://charts.helm.sh/stable>. Useful if running helm
   * deploys without internet access.
   */
  stable_repo?: '"false"'
  /**
   * Enable extremely verbose tracing for this resource. Useful when developing
   * the resource itself. May allow secrets to be displayed. (Default: false)
   */
  tracing_enabled?: boolean
  /**
   * Uninstalls and purge every helm release. Use with extreme caution.
   * (Default: false)
   */
  helm_setup_purge_all?: boolean
}

type OverrideValuesBase = {
  key: string
  hide?: boolean
  /**
   * https://github.com/Typositoire/concourse-helm3-resource/blob/844295a93c38fec462d3ea00dc1de14ff5786b2a/assets/out#L105
   */
  type?: 'string'
  verbatim?: boolean
}

type OverrideValuesPath = {
  value?: undefined
  path: string
}

type OverrideValuesValue = {
  value: ConcourseTs.Type.YamlValue
  path?: undefined
}

export type PutParams = {
  /**
   * Either the file containing the helm chart to deploy (ends with .tgz), the
   * path to a local directory containing the chart or the name of the chart
   * from a repo (e.g. `stable/mysql`).
   */
  chart: string
  /**
   * Either a file containing the name of the namespace or the name of the
   * namespace. (Default: taken from source configuration).
   */
  namespace?: ConcourseTs.Utils.Var | string
  /**
   * Create the namespace if it doesn't exist (Default: false).
   */
  create_namespace?: boolean
  /**
   * Either a file containing the name of the release or the name of the
   * release. (Default: taken from source configuration).
   */
  release?: boolean
  /**
   * File containing the values.yaml for the deployment. Supports setting
   * multiple value files using an array.
   */
  values?: string[] | string
  /**
   * Array of values that can override those defined in values.yaml. Each entry
   * in the array is a map containing a key and a value or path. Value is set
   * directly while path reads the contents of the file in that path. A `hide:
   * true` parameter ensures that the value is not logged and instead replaced
   * with `***HIDDEN***`. A `type: string` parameter makes sure Helm always
   * treats the value as a string (uses the `--set-string` option to Helm;
   * useful if the value varies and may look like a number, eg. if it's a Git
   * commit hash). A `verbatim: true` parameter escapes backslashes so the value
   * is passed as-is to the Helm chart (useful for `((credentials))`). The
   * default behaviour of backslashes in `--set` is to quote the next character
   * so `val\ue` is treated as `value` by Helm.
   */
  override_values?: Array<
    OverrideValuesBase & (OverrideValuesPath | OverrideValuesValue)
  >
  /**
   * Path to file containing the bearer token for Kubernetes.  This, 'token' or
   * `admin_key`/`admin_cert` are required if `cluster_url` is https.
   */
  token_path?: ConcourseTs.Utils.Var | string
  /**
   * version to deploy, can be a file or a value. Only applies if `chart` is not
   * a file.
   */
  version?: string
  /**
   * Test the release instead of installing it. Requires the `release`.
   * (Default: false)
   */
  test?: boolean
  /**
   * Display pod logs when running `test`. (Default: false)
   */
  test_logs?: boolean
  /**
   * Uninstalls the release instead of installing it. Requires the `release`.
   * (Default: false)
   */
  uninstall?: boolean
  /**
   * Deletes the namespace after uninstall. Requires `uninstall` set to true and
   * `namespace`. (Default: false)
   */
  delete_namespace?: boolean
  /**
   * Replace uninstall release with same name. (Default: false)
   */
  replace?: boolean
  /**
   * Force resource update through uninstall/recreate if needed. (Default:
   * false)
   */
  force?: boolean
  /**
   * Allow development versions of chart to be installed. This is useful when
   * wanting to install pre-release charts (i.e. 1.0.2-rc1) without having to
   * specify a version. (Default: false)
   */
  devel?: boolean
  /**
   * Dry run the helm install with the debug flag which logs interpolated chart
   * templates. (Default: false)
   */
  debug?: boolean
  /**
   * Requires that `wait` is set to Default. Applies --wait without timeout.
   * (Default: false)
   */
  check_is_ready?: boolean
  /**
   * Requires that `wait` is set to Default. Applies --wait and --wait-for-jobs
   * without timeout. (Default: false)
   */
  wait_for_jobs?: boolean
  /**
   * This flag will cause failed installs to purge the release, and failed
   * upgrades to rollback to the previous release. (Default: false)
   */
  atomic?: boolean
  /**
   * When upgrading, reuse the last release's values. (Default: false)
   */
  reuse_values?: boolean
  /**
   * When upgrading, reset the values to the ones built into the chart.
   * (Default: false)
   */
  reset_values?: boolean
  /**
   * This flag sets the max time to wait for any individual Kubernetes
   * operation. (Default: 5m0s)
   */
  timeout?: ConcourseTs.Utils.Duration
  /**
   * Allows deploy task to sleep for X seconds before continuing to next task.
   * Allows pods to restart and become stable, useful where dependency between
   * pods exists. (Default: 0)
   */
  wait?: number
  /**
   * String containing a kubeconfig. Overrides `kubeconfig_path` and source
   * configuration for cluster, token, and admin config.
   */
  kubeconfig?: ConcourseTs.Utils.Var
  /**
   * File containing a kubeconfig. Overrides source configuration for cluster,
   * token, and admin config.
   */
  kubeconfig_path?: ConcourseTs.Utils.Var | string
  /**
   * Show the diff that is applied if upgrading an existing successful release.
   * (Default: false)
   */
  show_diff?: boolean
  /**
   * Missing values files are skipped if they are specified in the values but do
   * not exist. (Default false)
   */
  skip_missing_values?: boolean
}

export type GetParams = never

export type Resource = ConcourseTs.Resource<Source, PutParams, GetParams>

export type ResourceType = ConcourseTs.ResourceType<
  'registry-image',
  RegistryImage.Source<'ghcr.io/typositoire/concourse-helm3-resource'>
>
