name: dependabot-pr

on:
  pull_request:
    branches:
      - main

# Set the access for individual scopes, or use permissions: write-all
permissions:
  pull-requests: write
  repository-projects: write

jobs:
  determine-matrix:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      affected: ${{ steps.affected.outputs.projects }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - uses: nrwl/nx-set-shas@v3

      - name: Determine affected packages
        id: affected
        run: |
          set -exu
          echo projects=$(yarn --silent nx print-affected | jq -c '.projects') >> $GITHUB_OUTPUT

  tests:
    name: test-${{ matrix.project }}

    runs-on: ubuntu-latest

    needs:
      - determine-matrix

    strategy:
      matrix:
        project: ${{ fromJson(needs.determine-matrix.outputs.affected) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/${{ matrix.project }}/node_modules
          key: lock-${{ matrix.project }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Restore NX compute cache
        id: cache-nx-restore
        uses: actions/cache/restore@v3
        with:
          path: .nx-cache
          key: nx-cache

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - uses: nrwl/nx-set-shas@v3

      - run: yarn nx run ${{ matrix.project }}:lint

      - run: yarn nx run ${{ matrix.project }}:test

      - name: Upload coverage result
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.project }}
          path: packages/${{ matrix.project }}/coverage

      - name: Delete NX compute cache
        run: |
          set -exu
          curl \
            -X DELETE \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/DecentM/concourse-ts/actions/caches?key=nx-cache

      - name: Save NX compute cache
        id: cache-nx-save
        uses: actions/cache/save@v3
        with:
          path: .nx-cache
          key: nx-cache

  build:
    name: build-${{ matrix.project }}

    needs:
      - determine-matrix

    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ${{ fromJson(needs.determine-matrix.outputs.affected) }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/${{ matrix.project }}/node_modules
          key: lock-${{ matrix.project }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Restore NX compute cache
        id: cache-nx-restore
        uses: actions/cache/restore@v3
        with:
          path: .nx-cache
          key: nx-cache

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - name: Build ${{ matrix.project }}
        run: yarn nx run ${{ matrix.project }}:build

      - name: Upload build result
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.project }}
          path: dist/packages/${{ matrix.project }}

      - name: Delete NX compute cache
        run: |
          set -exu
          curl \
            -X DELETE \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/DecentM/concourse-ts/actions/caches?key=nx-cache

      - name: Save NX compute cache
        id: cache-nx-save
        uses: actions/cache/save@v3
        with:
          path: .nx-cache
          key: nx-cache

  dependabot:
    runs-on: ubuntu-latest

    needs:
      - tests
      - build

    if: ${{ github.actor == 'dependabot[bot]' }}

    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Approve the PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Merge the PR
        if: ${{contains(steps.metadata.outputs.dependency-names, 'my-dependency') && steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
