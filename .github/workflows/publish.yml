name: npm-publish

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  determine-matrix:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      affected: ${{ steps.jobs.affected.projects }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: nrwl/nx-set-shas@v3

      - name: Determine affected packages
        id: affected
        run: |
          set -exu

          echo projects=$(yarn --silent nx print-affected | jq -c '.projects') >> $GITHUB_OUTPUT

  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - uses: nrwl/nx-set-shas@v3

      - run: yarn nx workspace-lint

      - run: yarn nx affected --target=lint --parallel=3

      - name: Tests
        run: |
          set -exu
          yarn nx affected --target=test

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: packages/*/coverage/lcov.info

  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest

    needs:
      - tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will hand over control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: results.sarif

  publish:
    name: Publish packages

    needs:
      - tests
      - determine-matrix

    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ${{ fromJson(needs.determine-matrix.outputs.affected) }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - run: yarn run ${{ matrix.project }}:build

      - name: Compare npm with local (versions)
        uses: Rober19/compare-npm-versions-ci@master
        id: package_version
        with:
          path: ./packages/${{ matrix.project }}
          npm_package_name: '@decentm/${{ matrix.project }}'

      # Publish new versions of affected packages
      - name: Publish to NPM
        if: steps.package_version.outputs.npm_is_greater == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -exu

          cd "${{ matrix.project }}"
          yarn publish . --access public
          cd -
